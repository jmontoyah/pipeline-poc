name: requirements

on:
  workflow_call:
    inputs:
      workdir:
        description: "The directory of the lambda function"
        default: './'
        required: false
        type: string
      path-environments-variables:
        description: "Path of the three environment variables files"
        required: false
        type: string
      node-version:
        default: '14.x'
        description: "Version for node"
        required: false
        type: string
      organization:
        description: 'SonarCloud organization'
        required: false
        default: 'davivienda-colombia'
        type: string
      coverage-file:
        description: 'Override the default value for coverage file if the default is not the right one'
        required: false
        type: string
      sonar-project-properties-file:
        description: 'Override the default value for coverage file if the default is not the right on'
        required: false
        type: string
      build-command:
        default: 'npm ci'
        required: false
        type: string
      test-command:
        default: 'npm run test:only && npm run coverage && npm run coverage:report'
        required: false
        type: string
      filepath:
        description: 'Path of the compiled application file'
        required: false
        type: string
      severity:
        description: 'Severity to fail on'
        required: false
        type: string
        default: 'Very High, High, Medium'

jobs:
  build-test-sonar:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.workdir }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Use Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Use Node.js
        uses: actions/setup-node@v3.5.0
        with:
          node-version: ${{ inputs.node-version }}
      - name: Authenticate Jfrog
        env:
          ARTIFACTORY_READER_USER: ${{ secrets.ARTIFACTORY_READER_USER }}
          ARTIFACTORY_READER_API_KEY: ${{ secrets.ARTIFACTORY_READER_API_KEY }}
        run: curl -u "$ARTIFACTORY_READER_USER:$ARTIFACTORY_READER_API_KEY" 'https://davicienda.jfrog.io/artifactory/api/npm/npm-davi/auth/npm-davi' >> ~/.npmrc
      - name: Install Dependencies
        run: ${{ inputs.build-command }}
      - name: Running Linter
        run: npm run lint
      - name: Running Test
        run: |
          ${{ inputs.test-command }}
      - name: Sonar Action
        uses: actions/checkout@v3
        with:
          repository: davivienda-colombia/davi-coe-sonarcloud-pipeline
          ref: 'v1.0.0'
          token: ${{ secrets.DAVI_READER_GITHUB_ACCESS_TOKEN }}
          persist-credentials: false
          path: ./.github/actions/davi-coe-sonarcloud-pipeline
      - name: SonarCloud Scanner
        uses: ./.github/actions/davi-coe-sonarcloud-pipeline
        with:
          access-token: ${{ secrets.SONAR_CLOUD_TOKEN }}
          project-name: ${{ github.event.repository.name }}
          project-key: ${{ github.event.repository.name }}
          organization: ${{ inputs.organization }}
          current-branch: ${{ github.event.pull_request.base.ref }}
          language: 'javascript'
          coverage-file: ${{ inputs.coverage-file }}
          sonar-project-properties-file: ${{ inputs.sonar-project-properties-file }}

      - name: Build
        run: |
          (npm run build && echo "build command ") || (npm ci && echo "ci command ")

      - name: Package Application
        run: npm pack

      - name: Veracode Upload
        if: ${{ github.event.pull_request.base.ref == 'main' }}
        id: Sast_Scan_and_upload_to_veracode
        uses: veracode/veracode-uploadandscan-action@0.2.6
        with:
          appname: ${{ github.event.repository.name }}
          createprofile: true
          filepath: ${{ inputs.filepath }}
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
          criticality: 'VeryHigh'

      - name: Download the Pipeline Scanner
        uses: wei/curl@master
        with:
          args: -o ${{ inputs.workdir }}/pipeline-scan-LATEST.zip https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip

      - name: Unzip the Pipeline Scanner
        run: unzip -n pipeline-scan-LATEST.zip

      - name: Veracode Scan
        run: java -Dpipeline.debug=false -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --file "${{ inputs.filepath }}" --fail_on_severity="${{ inputs.severity }}"
